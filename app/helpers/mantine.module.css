@layer mantine, components;

@layer components {
  .buttonLabel {
    font-family: var(--mantine-font-family-headings);
    font-weight: var(--button-fw);
  }

  .focus {
    outline-width: 1px;
  }

  .input {
    font-size: var(--mantine-font-size-md);

    @mixin dark {
      --input-bg: transparent;
    }
  }

  .inputLabel {
    font-family: var(--mantine-font-family-headings);
  }

  .modalHeader {
    min-height: 0px;
    align-items: start;
    padding-bottom: 6px;
  }

  .modal[data-full-screen] {
    .modalHeader {
      padding-top: calc(
        var(--mb-padding, var(--mantine-spacing-md)) +
          var(--safe-area-inset-top, 0px)
      );
    }

    .modalContent {
      padding-bottom: var(--safe-area-inset-bottom, 0px);
    }
  }

  .modal:not([data-disable-auto-fullscreen]) {
    .modalHeader {
      @mixin smaller-than $mantine-breakpoint-xs {
        padding-top: calc(
          var(--mb-padding, var(--mantine-spacing-md)) +
            var(--safe-area-inset-top, 0px)
        );
      }
    }

    .modalInner {
      @mixin smaller-than $mantine-breakpoint-xs {
        --modal-inner-y-offset: 0px;
        --modal-inner-x-offset: 0px;
      }
    }

    .modalContent {
      @mixin smaller-than $mantine-breakpoint-xs {
        --modal-content-flex: 0 0 100%;
        --modal-content-max-height: auto;
        --modal-content-height: 100dvh;

        border-radius: 0px;
        padding-bottom: var(--safe-area-inset-bottom, 0px);
      }
    }
  }

  .badgeLabel {
    text-transform: none;
    font-family: var(--mantine-font-family-headings);
  }

  .card {
    @mixin dark {
      background-color: var(--mantine-color-dark-8);
      border-color: var(--mantine-color-dark-6);
    }
  }

  .cardSection {
    &[data-with-border] {
      @mixin dark {
        border-color: var(--mantine-color-dark-6);
      }
    }
  }

  .dropdown {
    @mixin dark {
      background-color: var(--mantine-color-dark-8);
    }
  }

  .navLink {
    font-family: var(--mantine-font-family-headings);
    font-weight: 500;
    background-color: transparent;

    @mixin hover {
      background-color: transparent;
    }
  }

  .alert {
    &[data-variant="default"] {
    }
  }

  .alertBody {
    row-gap: 1px;
  }

  .alertTitle {
    font-family: var(--mantine-font-family-headings);
  }

  .text {
    &:not([data-inherit]):not([data-inline]) {
      line-height: var(--mantine-line-height);
    }
  }

  .title {
    line-height: var(--mantine-line-height);
  }

  .drawerHeader {
    padding-bottom: 6px;
  }

  .typography {
    word-break: break-word;
    line-height: var(--mantine-line-height-xs);

    a {
      font-weight: 500;
    }

    p {
      &:empty {
        height: 8px;
      }
    }

    :where(p) {
      &:not(:last-child) {
        margin-bottom: var(--mantine-spacing-xs);
      }
      &:last-child {
        margin-bottom: 0;
      }
    }

    :where(ul, ol):not([data-type="taskList"]) {
      margin-block: var(--mantine-spacing-xs);
      :where(li) {
        margin-bottom: 4px;
      }
    }
  }

  .divider {
    @mixin dark {
      --divider-color: var(--mantine-color-dark-6);
    }
  }

  .menuDropdown {
    @mixin dark {
      background-color: var(--mantine-color-dark-8);
    }
  }

  .dividerLabel {
    font-family: var(--mantine-font-family-headings);
    font-weight: 500;
  }

  .menuItem {
    &:not(:disabled) {
      @mixin hover {
        background-color: var(--mantine-primary-color-light);
      }
    }
  }

  .menuItemSection {
    color: var(--mantine-color-primary-text);
    width: 16px;
    height: 16px;
  }

  .menuItemLabel {
    color: light-dark(var(--mantine-color-gray-7), var(--mantine-color-dark-1));
    font-weight: 500;
    font-family: var(--mantine-font-family-headings);
  }

  .popoverDropdown:not(.menuDropdown) {
    @mixin dark {
      --popover-border-color: var(--mantine-color-dark-6);
      background-color: var(--mantine-color-dark-8);
    }
  }

  .richTextEditorContent {
    @mixin light {
      background-color: var(--mantine-color-white);
    }
  }

  .richTextEditorControl {
    &[data-active] {
      background-color: var(--mantine-primary-color-filled);
      color: var(--mantine-color-white);

      @mixin hover {
        background-color: var(--mantine-primary-color-filled-hover);
      }
    }
  }

  .dropzone {
    :global(.mantine-LoadingOverlay-overlay) {
      border-radius: var(--overlay-radius, var(--dropzone-radius, 0));
    }
  }

  .spoilerContent {
    position: relative;

    .spoilerControl[aria-expanded="false"] ~ &::after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      height: 44px;
      background: linear-gradient(
        to bottom,
        transparent,
        var(--mantine-color-body)
      );
    }
  }
}
